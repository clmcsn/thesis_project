assign porduct[0] = pps[0][0];
fullAdder fh0 (.a(pps[0][1]),.b(pps[1][0]),.ci(1'b0),.s(sums[0][0]),.co(carrys[0][0]));
fullAdder fh1 (.a(pps[0][2]),.b(pps[1][1]),.ci(1'b0),.s(sums[0][1]),.co(carrys[0][1]));
fullAdder fh2 (.a(pps[0][3]),.b(pps[1][2]),.ci(pps[3][0]),.s(sums[0][2]),.co(carrys[0][2]));
fullAdder fh3 (.a(pps[0][4]),.b(pps[1][3]),.ci(pps[3][1]),.s(sums[0][3]),.co(carrys[0][3]));
fullAdder fh4 (.a(pps[0][5]),.b(pps[1][4]),.ci(pps[3][2]),.s(sums[0][4]),.co(carrys[0][4]));
fullAdder fh5 (.a(pps[0][6]),.b(pps[1][5]),.ci(pps[3][3]),.s(sums[0][5]),.co(carrys[0][5]));
fullAdder fh6 (.a(pps[0][7]),.b(pps[1][6]),.ci(pps[3][4]),.s(sums[0][6]),.co(carrys[0][6]));
fullAdder fh7 (.a(1'b0),.b(pps[1][7]),.ci(pps[3][5]),.s(sums[0][7]),.co(carrys[0][7]));
fullAdder fh8 (.a(1'b0),.b(1'b0),.ci(pps[3][6]),.s(sums[0][8]),.co(carrys[0][8]));
fullAdder fh9 (.a(1'b0),.b(1'b0),.ci(pps[3][7]),.s(sums[0][9]),.co(carrys[0][9]));
assign porduct[1] = sums[0][0];
fullAdder fh10 (.a(sums[0][1]),.b(carrys[0][0]),.ci(1'b0),.s(sums[1][0]),.co(carrys[1][0]));
fullAdder fh11 (.a(sums[0][2]),.b(carrys[0][1]),.ci(1'b0),.s(sums[1][1]),.co(carrys[1][1]));
fullAdder fh12 (.a(sums[0][3]),.b(carrys[0][2]),.ci(1'b0),.s(sums[1][2]),.co(carrys[1][2]));
fullAdder fh13 (.a(sums[0][4]),.b(carrys[0][3]),.ci(pps[5][0]),.s(sums[1][3]),.co(carrys[1][3]));
fullAdder fh14 (.a(sums[0][5]),.b(carrys[0][4]),.ci(pps[5][1]),.s(sums[1][4]),.co(carrys[1][4]));
fullAdder fh15 (.a(sums[0][6]),.b(carrys[0][5]),.ci(pps[5][2]),.s(sums[1][5]),.co(carrys[1][5]));
fullAdder fh16 (.a(sums[0][7]),.b(carrys[0][6]),.ci(pps[5][3]),.s(sums[1][6]),.co(carrys[1][6]));
fullAdder fh17 (.a(sums[0][8]),.b(carrys[0][7]),.ci(pps[5][4]),.s(sums[1][7]),.co(carrys[1][7]));
fullAdder fh18 (.a(sums[0][9]),.b(carrys[0][8]),.ci(pps[5][5]),.s(sums[1][8]),.co(carrys[1][8]));
fullAdder fh19 (.a(1'b0),.b(carrys[0][9]),.ci(pps[5][6]),.s(sums[1][9]),.co(carrys[1][9]));
fullAdder fh20 (.a(1'b0),.b(1'b0),.ci(pps[5][7]),.s(sums[1][10]),.co(carrys[1][10]));
assign porduct[2] = sums[1][0];
fullAdder fh21 (.a(sums[1][1]),.b(carrys[1][0]),.ci(1'b0),.s(sums[2][0]),.co(carrys[2][0]));
fullAdder fh22 (.a(sums[1][2]),.b(carrys[1][1]),.ci(1'b0),.s(sums[2][1]),.co(carrys[2][1]));
fullAdder fh23 (.a(sums[1][3]),.b(carrys[1][2]),.ci(1'b0),.s(sums[2][2]),.co(carrys[2][2]));
fullAdder fh24 (.a(sums[1][4]),.b(carrys[1][3]),.ci(1'b0),.s(sums[2][3]),.co(carrys[2][3]));
fullAdder fh25 (.a(sums[1][5]),.b(carrys[1][4]),.ci(pps[7][0]),.s(sums[2][4]),.co(carrys[2][4]));
fullAdder fh26 (.a(sums[1][6]),.b(carrys[1][5]),.ci(pps[7][1]),.s(sums[2][5]),.co(carrys[2][5]));
fullAdder fh27 (.a(sums[1][7]),.b(carrys[1][6]),.ci(pps[7][2]),.s(sums[2][6]),.co(carrys[2][6]));
fullAdder fh28 (.a(sums[1][8]),.b(carrys[1][7]),.ci(pps[7][3]),.s(sums[2][7]),.co(carrys[2][7]));
fullAdder fh29 (.a(sums[1][9]),.b(carrys[1][8]),.ci(pps[7][4]),.s(sums[2][8]),.co(carrys[2][8]));
fullAdder fh30 (.a(sums[1][10]),.b(carrys[1][9]),.ci(pps[7][5]),.s(sums[2][9]),.co(carrys[2][9]));
fullAdder fh31 (.a(1'b0),.b(carrys[1][10]),.ci(pps[7][6]),.s(sums[2][10]),.co(carrys[2][10]));
fullAdder fh32 (.a(1'b0),.b(1'b0),.ci(pps[7][7]),.s(sums[2][11]),.co(carrys[2][11]));
assign porduct[3] = sums[2][0];
adder #(.parallelism(12),.ARCH_TYPE(3)) adder (.add1({1'b0,sums[2][11:1]}),.add0(carrys[2][11:0]),.carry_in(1'b0),.sum(product[15:4]));
