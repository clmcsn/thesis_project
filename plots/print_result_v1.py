#!/usr/bin/env python3

import matplotlib.pyplot as plt
import matplotlib.lines as mlines
#res=[[767. ,1086.,913. ,784. ,868. ,791. ,782. ,773. ,799. ,795. ,768. ,808. ,811. ,807. ,814. ,848. ,908. ,813. ,791. ,895. ,855. ,825. ,955. ,839.],
#        [1.22119291  ,0.901878341,0.90687674,1.12680839,0.95187198,1.06943001,1.17117401,1.18621645,1.03110011,1.05823826,1.21003461,1.01394161,0.99041104,1.0217596 ,0.98224257,0.96539413,0.90966288,0.98651041,1.06943001,0.91465785,0.95187542,0.97639664,0.901883511,0.96636928]]
res=[[1.71000000e+03,
742.          ,
1.29500000e+03,
9.12000000e+02,
9.06000000e+02,
781.          ,
1.12300000e+03,
1.22800000e+03,
751.          ,
750.          ,
8.83000000e+02,
1.25600000e+03,
804.          ,
852.          ,
1.00300000e+03,
754.          ,
803.          ,
860.          ,
9.99000000e+02,
1.29000000e+03,
8.82000000e+02,
876.          ,
9.74000000e+02,
8.78000000e+02,
9.84000000e+02,
1.04700000e+03,
8.96000000e+02,
841.          ,
764.          ,
799.          ,
1.02300000e+03,
9.53000000e+02,
815.          ,
9.32000000e+02,
832.          ,
1.07500000e+03,
9.26000000e+02,
1.10400000e+03,
1.09400000e+03,
9.64000000e+02,
825.          ,
1.01400000e+03,
1.11400000e+03,
1.23300000e+03,
1.06300000e+03,
748.          ,
768.          ,
9.03000000e+02,
818.          ,
767.          ],
[ 6.52676575e-01,
 1.13265817,
 6.52698738e-01,
 7.39450137e-01,
 8.28297928e-01,
 0.96992128,
 6.75738078e-01,
 6.62264386e-01,
 1.08626809,
 1.12506882,
 8.40937589e-01,
 6.61987222e-01,
 0.94041909,
 0.90871763,
 6.94158602e-01,
 1.06695862,
 0.96083374,
 0.88871197,
 7.14283365e-01,
 6.52975902e-01,
 8.64215419e-01,
 0.88692131,
 7.27120801e-01,
 8.64935003e-01,
 7.14307881e-01,
 6.87317749e-01,
 8.32416277e-01,
 0.91202216,
1.0613376 ,
 0.96923611,
 6.89830278e-01,
 7.31207307e-01,
 0.93123703,
 7.33396428e-01,
 0.92122718,
 6.80788104e-01,
 7.36105519e-01,
 6.80541794e-01,
 6.80739975e-01,
 7.30114689e-01,
 0.92128904,
 6.90306091e-01,
 6.75915131e-01,
 6.62185871e-01,
 6.84870118e-01,
1.1295784 ,
 1.04192786,
 8.28306282e-01,
 0.93051567,
 1.06129991
]]
quant_timings=[1.5245093107,1.4111844301,1.2780451775,1.1602358818,1.0806212425]
quant_top1= [771,775,776,858,1027]
quant_top1[:] = [x / 100 for x in quant_top1]
res[0][:] = [x / 100 for x in res[0][:]]
red_dot, = plt.plot(res[0][:], res[1][:], 'ro')
blue_dot, = plt.plot(quant_top1, quant_timings, 'bo')
plt.hlines(1.5245093107, 720/100, 1150/100, colors='r')
plt.vlines(760/100, 0.6, 1.55, colors='k')
plt.vlines(771/100, 0.6, 1.55, colors='b')
plt.ylabel('critical path delay (ns)')
plt.xlabel('top1 error (%)')
plt.axis([720/100, 1150/100, 0.6, 1.55])
plt.grid()
#legend
blue_line = mlines.Line2D([], [], color='blue')
red_line = mlines.Line2D([], [], color='red')
black_line = mlines.Line2D([], [], color='black')
plt.legend([red_dot, blue_dot,blue_line,red_line,black_line], ["Masked Solutions", "Base Quantization Solutions", "Best Quantized Accuracy","8-bit Architecture Delay","FloatingPoint32 Accuracy"])
plt.show()